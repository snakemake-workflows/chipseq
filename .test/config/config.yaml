# This file should contain everything to configure the workflow on a global scale.
# In case of sample based data, it should be complemented by a samples.tsv file that contains
# one row per sample. It can be parsed easily via pandas.
samples: "config/se_samples.tsv"
units: "config/se_units.tsv"  # to download reads from SRA the accession numbers (see https://www.ncbi.nlm.nih.gov/sra) of samples must be given in units.tsv
                              # dataset for testing this workflow with single end reads: https://www.ncbi.nlm.nih.gov/Traces/study/?acc=PRJNA255509&o=acc_s%3Aa
single_end: True

# config for SE dataset of se_samples.tsv and se_units.tsv
resources:
  ref:
    # Number of chromosomes to consider for calling.
    # The first n entries of the FASTA will be considered.
    n_chromosomes: 25
    # Ensembl species name
    species: homo_sapiens
    # Ensembl release
    release: 101
    # Genome build
    build: GRCh38
    # for testing data only chromosome 21 is selected
    chromosome:
    # if igenomes.yaml cannot be used, a value for the mappable or effective genome size can be specified here, e.g. macs-gsize: 2.7e9
    macs-gsize:

# config for PE dataset of pe_samples.tsv and pe_units.tsv
#resources:
#  ref:
#    # Number of chromosomes to consider for calling.
#    # The first n entries of the FASTA will be considered.
#    n_chromosomes: 17
#    # Ensembl species name
#    species: saccharomyces_cerevisiae
#    # Ensembl release
#    release: 101
#    # Genome build
#    build: R64-1-1
#    # for testing data only chromosome 21 is selected
#    chromosome:
#    # if igenomes.yaml cannot be used, a value for the mappable or effective genome size can be specified here, e.g. macs-gsize: 2.7e9
#    macs-gsize:

params:
  lc_extrap:
    activate: False
  # choose "narrow" or "broad" for macs2 callpeak analysis, for documentation and source code please see https://github.com/macs3-project/MACS
  peak-analysis: "broad"
  # Number of biological replicates required from a given condition for a peak to contribute to a consensus peak
  min-reps-consensus: 1
  deseq2:
    # optional to run vst transform instead of rlog
    vst:
      activate: False
  peak-annotation-analysis:
    activate: True
  peak-qc:
    activate: True
  consensus-peak-analysis:
    activate: True
  # TODO: move adapter parameters into a `adapter` column in units.tsv and check for its presence via the units.schema.yaml -- this enables unit-specific adapters, e.g. when integrating multiple datasets
  # these cutadapt parameters need to contain the required flag(s) for
  # the type of adapter(s) to trim, i.e.:
  # * https://cutadapt.readthedocs.io/en/stable/guide.html#adapter-types
  #   * `-a` for 3' adapter in the forward reads
  #   * `-g` for 5' adapter in the forward reads
  #   * `-b` for adapters anywhere in the forward reads
  # also, separate capitalised letter flags are required for adapters in
  # the reverse reads of paired end sequencing:
  # * https://cutadapt.readthedocs.io/en/stable/guide.html#trimming-paired-end-reads
  cutadapt-se: "-g AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT"
   # reasoning behind parameters:
  #   * `-e 0.005`: the default cutadapt maximum error rate of `0.2` is far too high, for Illumina
  #     data the error rate is more in the range of `0.005` and setting it accordingly should avoid
  #     false positive adapter matches
  #   * `--minimum-overlap 7`: the cutadapt default minimum overlap of `5` did trimming on the level
  #     of expected adapter matches by chance
  cutadapt-pe: "-a AGATCGGAAGAGCACACGTCTGAACTCCAGTCA -g AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT -A AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT -G AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT"
  cutadapt-others: "-e 0.005 --overlap 7"
